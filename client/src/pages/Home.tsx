import { useState, useEffect } from "react";

import { Loader, Card, FormField, Modal } from "../components";
import { PostInterface } from "../interfaces/Post";

type RenderCardsProps = {
  data: any;
  title: string;
  handleModal: any;
};

const RenderCards = ({ data, title, handleModal }: RenderCardsProps) => {
  if (data?.length > 0)
    return data.map((post: any) => (
      <Card key={post._id} {...post} handleModal={handleModal} />
    ));

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<PostInterface[]>([]);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState<PostInterface[]>([]);
  const [searchTimeout, setSearchTimeout] = useState<any>(null);
  const [selectedPost, setSelectedPost] = useState<PostInterface>();
  const [showModal, setShowModal] = useState(false);

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setLoading(true);
        const response = await fetch(
          "https://pixelverse.onrender.com/api/v1/post",
          {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          }
        );
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        console.log(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e: any) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item: PostInterface) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );

        setSearchedResults(searchResults);
      }, 500)
    );
  };

  const handleModal = ({ _id, photo, prompt, name }: PostInterface): void => {
    setSelectedPost({ _id, photo, prompt, name });
    setShowModal(!showModal);
  };

  return (
    <>
      <Modal
        title={"Add a new photo"}
        handleModal={handleModal}
        post={selectedPost}
        show={showModal}
      />
      <section className="max-w-7xl mx-auto">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">
            The Community Showcase
          </h1>
          <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
            Browse through a collection of imaginative and visually stunning
            images generated by DALL-E AI
          </p>
        </div>
        <div className="mt-16">
          <FormField
            labelName="Search post"
            type="text"
            name="text"
            placeholder="Search posts"
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>

        <div className="mt-10">
          {loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing results for:{" "}
                  <span className="text-[#222328]">{searchText}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards
                    data={searchedResults}
                    title="No searched results found"
                    handleModal={handleModal}
                  />
                ) : (
                  <RenderCards
                    data={allPosts}
                    title="No posts found"
                    handleModal={handleModal}
                  />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </>
  );
};

export default Home;
